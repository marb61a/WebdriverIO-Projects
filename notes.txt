Setup WebdriverIO (WDIO)
    - NPM will need to have been initialise in a project folder by the time WDIO is being installed
    - To install WDIO using the following command
        - npm install --save-dev @wdio/cli
    - Following the installation a config file will have to be generated
        - npx wdio config
        - npx runs npm packages without needing to have paths etc 
    - This will generate a list of options which must be selected through
        - This covers from base url to where the tests will be ran so this will change depending on circumstances of testing

Setup Babel
    - Babel is a JavaScript compiler
        - https://babeljs.io/
    - Babel may need up to 4 packages installed
        - npm install --savve-dev @babel/core @babel/cli @babel/preset-env @babel/register
    - Thene the babel.config.js file will need to be added
        - There are options available for customising project eg test location etc
    
Web Automation testing
Launch Chrome Driver
    - Describe block is a block which holds a set of test steps
    - Change the package.json file to run wdio config file which runs tests
        - "test": "wdio wdio.conf.js"
        - npm run test
    - To avoid seeing node based errors
        - npm run test --silent
    - Errors may occur if chromedriver and installed version of chrome differ
    - Also may need to disable baseUrl in wdio.conf.js if not using a base url

Pausing tests
    - Tests run very quickly so may need pauses to see where issues occur
    - These are called explicit delays and should only be used in setting up tests
    - Implicit delays which are more intelligent should be used instead of explicit
    - Delays are expressed in milliseconds
    - Be careful to use the proper domain name when specifying sites

Assert Title & URL
    - Assertions are used to check whether a value that is returned matches what was expected
    - If urls do not exactly match what is returned then the assertion will fail
    - Uses the tohaveUrl and toHaveTitle commands 

Assert Elements
    - Verifying that elements on the website are visible
    - Uses the toBeVisible command

Assert Links
    - Assert that the value of a link is correct
    - Uses the toHaveLink command

